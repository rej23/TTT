# ---
# - name: Set up Tekton on existing Minikube cluster
#   hosts: localhost
#   connection: local
#   tasks:
#     - name: Ensure Minikube is running
#       command: minikube status
#       register: minikube_status
#       changed_when: false
#       failed_when: minikube_status.rc != 0

#     - name: Install Tekton Pipelines
#       kubernetes.core.k8s:
#         definition: "{{ item }}"
#       loop: "{{ lookup('url', 'https://storage.googleapis.com/tekton-releases/pipeline/latest/release.yaml') | from_yaml_all | list }}"

#     - name: Install Tekton Dashboard
#       shell: |
#         curl -sL https://raw.githubusercontent.com/tektoncd/dashboard/main/scripts/release-installer | \
#         bash -s -- install latest --read-write
#       args:
#         executable: /bin/bash

#     - name: Wait for Tekton Dashboard to be ready
#       command: >
#         kubectl wait -n tekton-pipelines
#         --for=condition=ready pod
#         --selector=app.kubernetes.io/part-of=tekton-dashboard,app.kubernetes.io/component=dashboard
#         --timeout=90s

#     - name: Install Tekton CLI
#       get_url:
#         url: https://github.com/tektoncd/cli/releases/download/v0.30.1/tkn_0.30.1_Linux_x86_64.tar.gz
#         dest: /tmp/tkn.tar.gz

#     - name: Extract Tekton CLI
#       unarchive:
#         src: /tmp/tkn.tar.gz
#         dest: /usr/local/bin
#         remote_src: yes
#         extra_opts: [--strip-components=1]

#     - name: Verify Tekton installation
#       command: kubectl get pods -n tekton-pipelines
#       register: tekton_pods
#       changed_when: false

#     - name: Display Tekton pods
#       debug:
#         var: tekton_pods.stdout_lines


---
- name: Set up Tekton on existing Minikube cluster
  hosts: localhost
  connection: local
  vars:
    tkn_install_dir: "{{ ansible_env.HOME }}/.local/bin"
  tasks:
    - name: Ensure Minikube is running
      command: minikube status
      register: minikube_status
      changed_when: false
      failed_when: minikube_status.rc != 0

    - name: Install Tekton Pipelines
      kubernetes.core.k8s:
        definition: "{{ item }}"
      loop: "{{ lookup('url', 'https://storage.googleapis.com/tekton-releases/pipeline/latest/release.yaml') | from_yaml_all | list }}"

    - name: Install Tekton Dashboard
      shell: |
        curl -sL https://raw.githubusercontent.com/tektoncd/dashboard/main/scripts/release-installer | \
        bash -s -- install latest --read-write
      args:
        executable: /bin/bash

    - name: Wait for Tekton Dashboard to be ready
      command: >
        kubectl wait -n tekton-pipelines
        --for=condition=ready pod
        --selector=app.kubernetes.io/part-of=tekton-dashboard,app.kubernetes.io/component=dashboard
        --timeout=90s

    - name: Create directory for Tekton CLI
      file:
        path: "{{ tkn_install_dir }}"
        state: directory
        mode: '0755'

    - name: Download and extract Tekton CLI
      unarchive:
        src: https://github.com/tektoncd/cli/releases/download/v0.30.1/tkn_0.30.1_Linux_x86_64.tar.gz
        dest: "{{ tkn_install_dir }}"
        remote_src: yes
        mode: '0755'
        creates: "{{ tkn_install_dir }}/tkn"

    - name: Add Tekton CLI directory to PATH
      lineinfile:
        path: "{{ ansible_env.HOME }}/.bashrc"
        line: 'export PATH=$PATH:{{ tkn_install_dir }}'
        state: present

    - name: Verify Tekton CLI installation
      command: "{{ tkn_install_dir }}/tkn version"
      register: tkn_version
      changed_when: false
      failed_when: tkn_version.rc != 0

    - name: Display Tekton CLI version
      debug:
        var: tkn_version.stdout_lines

    - name: Verify Tekton installation
      command: kubectl get pods -n tekton-pipelines
      register: tekton_pods
      changed_when: false

    - name: Display Tekton pods
      debug:
        var: tekton_pods.stdout_lines